{"version":3,"sources":["lib/func.js","components/SquareRow.js","components/Board.js","components/Game.js","App.js","index.js"],"names":["Square","props","console","log","win","className","onClick","value","calculateWinner","squares","i","length","j","nSquareToWin","k","val","x","y","direction","SquareRow","squareRow","this","row","map","square","idx","winner","rowIdx","React","Component","Board","board","Game","tmpArr","Array","defaultHeight","defaultWidth","fill","state","inputWidth","inputHeight","width","height","history","location","stepNumber","xIsNext","isDescending","handleChangeHeight","bind","handleChangeWidth","sort","step","setState","slice","current","concat","e","Number","target","minSize","maxSize","status","moves","move","desc","jumpTo","reverse","arrow","type","placeholder","onChange","min","max","handleClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a18f944.chunk.js","sourcesContent":["import { nSquareToWin } from \"../config.json\";\r\n\r\nexport function Square(props) {\r\n  console.log(props);\r\n  if (props.win) {\r\n    return (\r\n      <button className=\"square square-win\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport function calculateWinner(squares) {\r\n  let win;\r\n  for (let i = 0; i < squares.length; i++) {\r\n    for (let j = 0; j < squares[i].length; j++) {\r\n      if (!squares[i][j]) continue;\r\n      if (j <= squares[i].length - nSquareToWin) {\r\n        win = true;\r\n        for (let k = 0; k < nSquareToWin - 1; k++) {\r\n          if (squares[i][j + k] !== squares[i][j + k + 1]) {\r\n            win = false;\r\n          }\r\n        }\r\n        if (win)\r\n          return { val: squares[i][j], x: j, y: i, direction: \"ToRight\" };\r\n      }\r\n      if (i <= squares.length - nSquareToWin) {\r\n        win = true;\r\n        for (let k = 0; k < nSquareToWin - 1; k++) {\r\n          if (squares[i + k][j] !== squares[i + k + 1][j]) {\r\n            win = false;\r\n          }\r\n        }\r\n        if (win) return { val: squares[i][j], x: j, y: i, direction: \"ToDown\" };\r\n      }\r\n      if (\r\n        j <= squares[i].length - nSquareToWin &&\r\n        i <= squares.length - nSquareToWin\r\n      ) {\r\n        win = true;\r\n        for (let k = 0; k < nSquareToWin - 1; k++) {\r\n          if (squares[i + k][j + k] !== squares[i + k + 1][j + k + 1]) {\r\n            win = false;\r\n          }\r\n        }\r\n        if (win)\r\n          return { val: squares[i][j], x: j, y: i, direction: \"ToRightDown\" };\r\n      }\r\n      if (i <= squares.length - nSquareToWin && j >= nSquareToWin - 1) {\r\n        win = true;\r\n        for (let k = 0; k < nSquareToWin - 1; k++) {\r\n          if (squares[i + k][j - k] !== squares[i + k + 1][j - k - 1]) {\r\n            win = false;\r\n          }\r\n        }\r\n        if (win)\r\n          return { val: squares[i][j], x: j, y: i, direction: \"ToLeftDown\" };\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import React from \"react\";\r\nimport { Square } from \"../lib/func\";\r\nimport { nSquareToWin } from \"../config.json\";\r\n\r\nexport default class SquareRow extends React.Component {\r\n  render() {\r\n    let squareRow = this.props.row.map((square, idx) => {\r\n      let k = \"s\" + idx;\r\n      let win = false;\r\n      let winner = this.props.winner;\r\n      let rowIdx = this.props.rowIdx;\r\n      if (winner) {\r\n        if (\r\n          winner.direction === \"ToRight\" &&\r\n          idx >= winner.x &&\r\n          idx <= winner.x + nSquareToWin - 1 &&\r\n          rowIdx === winner.y\r\n        ) {\r\n          win = true;\r\n        }\r\n        if (\r\n          winner.direction === \"ToDown\" &&\r\n          rowIdx >= winner.y &&\r\n          rowIdx <= winner.y + nSquareToWin - 1 &&\r\n          idx === winner.x\r\n        ) {\r\n          win = true;\r\n        }\r\n        if (\r\n          winner.direction === \"ToRightDown\" &&\r\n          idx >= winner.x &&\r\n          idx <= winner.x + nSquareToWin - 1 &&\r\n          idx - winner.x === rowIdx - winner.y\r\n        ) {\r\n          win = true;\r\n        }\r\n        if (\r\n          winner.direction === \"ToLeftDown\" &&\r\n          idx <= winner.x &&\r\n          idx >= winner.x - nSquareToWin + 1 &&\r\n          winner.x - idx === rowIdx - winner.y\r\n        ) {\r\n          console.log(\r\n            winner.x +\r\n              \" \" +\r\n              winner.y +\r\n              \" \" +\r\n              idx +\r\n              \" \" +\r\n              rowIdx +\r\n              \" \" +\r\n              nSquareToWin\r\n          );\r\n          win = true;\r\n        }\r\n      }\r\n      return (\r\n        <Square\r\n          win={win}\r\n          value={square}\r\n          onClick={() => this.props.onClick(this.props.rowIdx, idx)}\r\n          key={k}\r\n        />\r\n      );\r\n    });\r\n    return <div className=\"board-row\">{squareRow}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport SquareRow from \"./SquareRow\"\r\nimport {Square} from \"../lib/func\"\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    let board;\r\n    board = this.props.squares.map((row, idx) => {\r\n      let k = \"r\" + idx;\r\n      return (\r\n        <SquareRow\r\n          winner={this.props.winner}\r\n          rowIdx={idx}\r\n          row={row}\r\n          onClick={this.props.onClick}\r\n          key={k}\r\n        />\r\n      );\r\n    });\r\n    return <div>{board}</div>;\r\n  }\r\n}\r\nexport default Board;\r\n","import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport { calculateWinner } from \"../lib/func\";\r\nimport { defaultWidth, defaultHeight, minSize, maxSize } from \"../config.json\";\r\n\r\nexport default class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let tmpArr = Array(defaultHeight);\r\n    for (let i = 0; i < defaultHeight; i++) {\r\n      tmpArr[i] = Array(defaultWidth).fill(null);\r\n    }\r\n    this.state = {\r\n      inputWidth: defaultWidth,\r\n      inputHeight: defaultHeight,\r\n      width: defaultWidth,\r\n      height: defaultHeight,\r\n      history: [\r\n        {\r\n          squares: tmpArr,\r\n          location: null,\r\n        },\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      isDescending: true,\r\n    };\r\n    this.handleChangeHeight = this.handleChangeHeight.bind(this);\r\n    this.handleChangeWidth = this.handleChangeWidth.bind(this);\r\n    this.sort = this.sort.bind(this);\r\n  }\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n  handleClick(i, j) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[this.state.stepNumber];\r\n    const squares = current.squares.slice();\r\n    current.squares.map((row, idx) => {\r\n      squares[idx] = current.squares[idx].slice();\r\n      return true;\r\n    });\r\n    if (calculateWinner(squares) || squares[i][j]) {\r\n      return;\r\n    }\r\n    squares[i][j] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n          location: { x: i, y: j },\r\n        },\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n  sort() {\r\n    this.setState({ isDescending: !this.state.isDescending });\r\n  }\r\n  handleChangeWidth(e) {\r\n    const val = Number(e.target.value);\r\n    this.setState({ inputWidth: val });\r\n    if (val >= minSize && val <= maxSize) {\r\n      let tmpArr = Array(this.state.height);\r\n      for (let i = 0; i < this.state.height; i++) {\r\n        tmpArr[i] = Array(val).fill(null);\r\n      }\r\n      this.setState({\r\n        width: val,\r\n        history: [\r\n          {\r\n            squares: tmpArr,\r\n            location: null,\r\n          },\r\n        ],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n      });\r\n    }\r\n  }\r\n  handleChangeHeight(e) {\r\n    const val = Number(e.target.value);\r\n    this.setState({ inputHeight: val });\r\n    if (val >= minSize && val <= maxSize) {\r\n      let tmpArr = Array(val);\r\n      for (let i = 0; i < val; i++) {\r\n        tmpArr[i] = Array(this.state.width).fill(null);\r\n      }\r\n      this.setState({\r\n        height: Number(val),\r\n        history: [\r\n          {\r\n            squares: tmpArr,\r\n            location: null,\r\n          },\r\n        ],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    let moves = history.map((step, move) => {\r\n      const desc = move\r\n        ? \"Go to move #\" +\r\n          move +\r\n          \" (\" +\r\n          step.location.x +\r\n          \",\" +\r\n          step.location.y +\r\n          \")\"\r\n        : \"Go to game start\";\r\n      return this.state.stepNumber === move ? (\r\n        <li key={move}>\r\n          <button className=\"btn-bold\" onClick={() => this.jumpTo(move)}>\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      ) : (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n    if (!this.state.isDescending) {\r\n      moves = moves.reverse();\r\n    }\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner.val;\r\n    } else {\r\n      if (moves.length === this.state.inputWidth * this.state.inputHeight + 1)\r\n        status = \"Draw\";\r\n      else status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    let arrow = this.state.isDescending ? \"ASC\" : \"DESC\";\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"game-config\">\r\n          <span className=\"fixed-size\">Width:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Width\"\r\n            value={this.state.inputWidth}\r\n            onChange={this.handleChangeWidth}\r\n            min=\"5\"\r\n            max=\"25\"\r\n          />\r\n          <br />\r\n          <span className=\"fixed-size\">Height:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Height\"\r\n            value={this.state.inputHeight}\r\n            onChange={this.handleChangeHeight}\r\n            min=\"5\"\r\n            max=\"25\"\r\n          />\r\n        </div>\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board\r\n              squares={current.squares}\r\n              onClick={(i, j) => this.handleClick(i, j)}\r\n              winner={winner}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>\r\n              <button onClick={this.sort}>Step: {arrow}</button>\r\n            </div>\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./index.css\";\nimport Game from \"./components/Game\";\n\nexport default function App() {\n  return <Game></Game>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}